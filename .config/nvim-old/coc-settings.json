{
    "initializationOptions": {
      // ...
      // This will re-index the file on buffer change which is definitely a performance hit. See if it works for you
      "index": {
        "onChange": true
      },
      // This is mandatory!
      "highlight": { "lsRanges" : true }
    },


    "suggest.noselect": false,
    "coc.preferences.formatOnSaveFiletypes": [],

    "python.jediEnabled": false,

    "diagnostic.displayByAle": true,


    //-------- Code Spell Checker Configuration --------
    // The Language local to use when spell checking. "en" and "en-GB" are currently supported.
    "cSpell.languageSettings": [{
            "languageId": "*",
            "local": "en-GB",
            "dictionaries": ["wordsEnGb"]
        },
        {
            "languageId": "*",
            "dictionaries": ["companies", "softwareTerms", "misc"]
        },
        {
            "languageId": "python",
            "allowCompoundWords": true,
            "dictionaries": ["python"]
        },
        {
            "languageId": "go",
            "allowCompoundWords": true,
            "dictionaries": ["go"]
        },
        {
            "languageId": "javascript",
            "dictionaries": ["typescript", "node"]
        },
        {
            "languageId": "javascriptreact",
            "dictionaries": ["typescript", "node"]
        },
        {
            "languageId": "typescript",
            "dictionaries": ["typescript", "node"]
        },
        {
            "languageId": "typescriptreact",
            "dictionaries": ["typescript", "node"]
        },
        {
            "languageId": "html",
            "dictionaries": ["html", "fonts", "typescript", "css"]
        },
        {
            "languageId": "php",
            "dictionaries": ["php", "html", "fonts", "css", "typescript"]
        },
        {
            "languageId": "css",
            "dictionaries": ["fonts", "css"]
        },
        {
            "languageId": "less",
            "dictionaries": ["fonts", "css"]
        },
        {
            "languageId": "scss",
            "dictionaries": ["fonts", "css"]
        },
        {
            "languageId": "tex",
            "dictionaries": ["tex", "companies", "softwareTerms", "misc"]
        }
    ],

    // Controls the maximum number of spelling errors per document.
    "cSpell.maxNumberOfProblems": 100,

    // Controls the number of suggestions shown.
    "cSpell.numSuggestions": 8,

    // The minimum length of a word before checking it against a dictionary.
    "cSpell.minWordLength": 4,

    // Specify file types to spell check.
    "cSpell.enabledLanguageIds": [
      "csharp",
      "go",
      "javascript",
      "javascriptreact",
      "markdown",
      "php",
      "plaintext",
      "tex",
      "typescript",
      "typescriptreact",
      "yml"
    ],

    // Enable / Disable the spell checker.
    "cSpell.enabled": true,

    // Display the spell checker status on the status bar.
    "cSpell.showStatus": true,

    // Enable / Disable compound words like 'errormessage'
    "cSpell.allowCompoundWords": false,

    // Words to be ignored and not suggested.
    "cSpell.ignoreWords": ["behaviour"],

    // User words to add to dictionary.  Should only be in the user settings.
    "cSpell.userWords": [
      "Awab",
      "Lowood",
      "Qureshi",
      "Typeof",
      "Zong's",
      "afterpage",
      "clearpage",
      "colourless",
      "crystalisation",
      "customise",
      "documentclass",
      "graphicx",
      "includegraphics",
      "maketitle",
      "mhchem",
      "newcommand",
      "newgeometry",
      "pagebreak",
      "performant",
      "restoregeometry",
      "roch",
      "subsubsection",
      "textit",
      "unreacted",
      "usepackage",
      "virtualised"
    ],

    // Specify paths/files to ignore.
    "cSpell.ignorePaths": [
        "node_modules", // this will ignore anything the node_modules directory
        "**/node_modules", // the same for this one
        "**/node_modules/**", // the same for this one
        "node_modules/**", // Doesn't currently work due to how the current working directory is determined.
        "vscode-extension", //
        ".git", // Ignore the .git directory
        "*.dll", // Ignore all .dll files.
        "**/*.dll" // Ignore all .dll files
    ],

    // flagWords - list of words to be always considered incorrect
    // This is useful for offensive words and common spelling errors.
    // For example "hte" should be "the"`
    "cSpell.flagWords": ["hte"],

    // Set the delay before spell checking the document. Default is 50.
    "cSpell.spellCheckDelayMs": 50,

    // explorer
    "explorer.width": 30,
    "explorer.icon.enableNerdfont": true,
    "explorer.previewAction.onHover": false,
    "explorer.keyMappings": {
        "<cr>": ["expandable?", "expand", "open"],
        "v": "open:vsplit"
      },

    // autocomplete pairs
    "pairs.enableCharacters": [
        "(",
        "[",
        "{",
      //  "<",
        "'",
        "\"",
        "`"
    ],


    "rust-analyzer.checkOnSave.command": "clippy",

    "languageserver": {

    "racket": {
      "command": "racket",
      "args": [
        "-l",
        "racket-langserver"
      ],
      "filetypes": ["scheme", "rkt", "racket", "lazy"],
      "initializationOptions": {
         "index": {
            "onChange": true
          }
      }
    }

//  "haskell": {
//        "command": "haskell-language-server-wrapper",
//        "args": [
//          "--lsp"
//        ],
//    //  "rootPatterns": [
//    //    ".stack.yaml",
//    //    ".hie-bios",
//    //    "BUILD.bazel",
//    //    "cabal.config",
//    //    "package.yaml"
//    //  ],
//        "filetypes": [
//          "hs",
//          "lhs",
//          "haskell"
//        ],
//    "initializationOptions": {
//      "languageServerHaskell": {
//        "hlintOn": true,
//        "maxNumberOfProblems": 10,
//        "completionSnippetsOn": true
//      }
//    }
//      }
    // language server set up for C/C++ following this guide here https://chmanie.com/post/2020/07/17/modern-c-development-in-neovim/
    // "clangd": {
    // "command": "clangd",
    // "rootPatterns": [
    //   "compile_flags.txt",
    //   "compile_commands.json",
    //   ".vim/",
    //   ".git/",
    //   ".hg/"
    // ],
    // "filetypes": ["c", "cpp", "objc", "objcpp", "cuda", "arduino"],
    // "initializationOptions": {
    //         // This will re-index the file on buffer change which is definitely a performance hit. See if it works for you
    //     "index": {
    //       "onChange": true
    //     },
    //     // This is mandatory!
    //     "highlight": { "lsRanges" : true },
    //        "cache": {
    //          "directory": "/tmp/ccls"
    //        },
    //        "client": {
    //         "snippetSupport": true
    //        }
    //  }
    // }
  },
  "clangd.path": "~/.config/coc/extensions/coc-clangd-data/install/15.0.6/clangd_15.0.6/bin/clangd"
}
