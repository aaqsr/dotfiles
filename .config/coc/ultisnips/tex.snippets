# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet \docu "Starts the document in typical Awab preference" b
\documentclass[12pt]{article}
\usepackage[margin=1in]{geometry}
$3

\title{$1}
% \author{Awab Qureshi}
% \date{}

\begin{document}
\maketitle

\section{$2}

$4

\end{document}
endsnippet

snippet \formula "Faster way to insert forumlae (To be deleted)" b
\subsection{$1}
% \begin{mybox}
\[
	$2
	\]
% \end{mybox}
\begin{enumerate}
	\item \($3\) is the $4
	\item \($5\) is the $6
	\item \($7\) is the $8
\end{enumerate}
endsnippet

snippet e; "Inserts enumerate. Use with i;" A
\begin{enumerate}
	\item $1
	$2
\end{enumerate}
endsnippet

snippet i; "Inserts item in enumerate (To be deleted)" A
\item $1
$2
endsnippet

# snippet f; "Inserts fraction" iA
# \frac{$1}{$2} $3
# endsnippet

# snippet // "Fraction" iA
# \\frac{$1}{$2}$0
# endsnippet

################################################################################
# Fractions using regex and // from https://gist.github.com/lucasgruwez/ac0ee45c2b5da289fa1b11f594525578
################################################################################

priority 100
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

snippet m; "Inserts multiply sign" A
\times $1
endsnippet

snippet $; "Inserts math mode" A
\( $1 \) $2
endsnippet

snippet ]; "Inserts large math mode" A

\[
	$1
\]
$2
endsnippet

snippet box "Inserts a dynamic Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet
